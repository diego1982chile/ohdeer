<?php

namespace Proxies\__CG__\OhDeer\AppBundle\Entity;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class Producto extends \OhDeer\AppBundle\Entity\Producto implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int) $this->_identifier["id"];
        }
        $this->__load();
        return parent::getId();
    }

    public function setCodigo($codigo)
    {
        $this->__load();
        return parent::setCodigo($codigo);
    }

    public function getCodigo()
    {
        $this->__load();
        return parent::getCodigo();
    }

    public function setDescripcion($descripcion)
    {
        $this->__load();
        return parent::setDescripcion($descripcion);
    }

    public function getDescripcion()
    {
        $this->__load();
        return parent::getDescripcion();
    }

    public function setImagen($imagen)
    {
        $this->__load();
        return parent::setImagen($imagen);
    }

    public function getImagen()
    {
        $this->__load();
        return parent::getImagen();
    }

    public function setCantidad($cantidad)
    {
        $this->__load();
        return parent::setCantidad($cantidad);
    }

    public function getCantidad()
    {
        $this->__load();
        return parent::getCantidad();
    }

    public function setFecha($fecha)
    {
        $this->__load();
        return parent::setFecha($fecha);
    }

    public function setFile($file)
    {
        $this->__load();
        return parent::setFile($file);
    }

    public function getFile()
    {
        $this->__load();
        return parent::getFile();
    }

    public function getAttachment()
    {
        $this->__load();
        return parent::getAttachment();
    }

    public function getFecha()
    {
        $this->__load();
        return parent::getFecha();
    }

    public function setCostoPesos($costoPesos)
    {
        $this->__load();
        return parent::setCostoPesos($costoPesos);
    }

    public function getCostoPesos()
    {
        $this->__load();
        return parent::getCostoPesos();
    }

    public function setCategoria(\OhDeer\AppBundle\Entity\Categoria $categoria = NULL)
    {
        $this->__load();
        return parent::setCategoria($categoria);
    }

    public function getCategoria()
    {
        $this->__load();
        return parent::getCategoria();
    }

    public function getUploadRootDir()
    {
        $this->__load();
        return parent::getUploadRootDir();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'codigo', 'descripcion', 'imagen', 'cantidad', 'fecha', 'costo_pesos', 'categoria');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields as $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}